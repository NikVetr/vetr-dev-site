:root {
    --gap: 10px;
    --panel: 320px;
    --ui: 14px;

    /* light-theme values */
    --bg: #ffffff;
    --fg: #0b0b0b;
    --border: #a0a0a0;
    --panel-bg: #fff;
    --accent-col: #daebf9;
    --grid: #d0d0d0;
    --fg-muted: #666;
    --fg-heading: #0b0b0b;
    --canvas-bg: #ffffff;
    --chip-col: #fff;
    --canvas-grid: #b5b5b5;
    
    --col-r:       #18457b;  /* R blue */
    --col-python: #be8e00;  /* Python yellow */
    --col-latex:   #48721a;  /* TeX green */
    --col-matlab:  #7e4411;  /* MATLAB orange */
    --col-wolfram: #88100c;  /* Mathematica red */
    --col-julia:   #643a77;  /* Julia purple */
    --col-other:   #6c757d;  /* neutral */
}

body {
    margin: 0;
    font-family: system-ui, -apple-system, Segoe UI, Roboto, sans-serif;
    font-size: var(--ui);
    color: var(--fg);
    background: var(--bg);
    overflow: hidden;
}

body.dark {
    --bg: #1d1d1d;
    --fg: #e2e2e2;
    --border: #bdbdbd;
    --panel-bg: #383838;
    --accent-col: #3c5060;
    --chip-col: #2e2e2e;
    --grid: #e2e2e2;
    --fg-muted: #e2e2e2;
    --fg-heading: #bdbdbd;
    --canvas-bg: #0c0c0c;
    /* graphite background */
    --canvas-grid: #555555;
    
  --col-r:       #6aa3ff;
  --col-python: #fec008;
  --col-latex:   #62b37b;
  --col-matlab:  #ffa04d;
  --col-wolfram: #ff6a6a;
  --col-julia:   #c49ad9;
  --col-other:   #a7b1b8;
}

.app {
    display: grid;
    grid-template-columns: 1fr;
    /* single column */
    grid-template-rows: auto 1fr auto;
    gap: var(--gap);
    padding: var(--gap);
    height: 100vh;
    box-sizing: border-box;
}

header, footer {
    grid-column: 1 / -1;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 8px 14px;
    overflow-x: auto;
}

header h1 {
    font-size: 16px;
    margin: 0;
    font-weight: 600;
}

/* Modifier indicator chips */
.modbar {
  display: inline-flex;
  align-items: center;
  margin-left: .5rem;
}

.modchip {
  padding: 6px 8px;
  border: 1px solid #d0d0d0;               /* same as button */
  background: #fff;                        /* same as button */
  color: var(--fg, #333);
  font: 12px/1 ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;
  user-select: none;
  transition: background-color .12s ease, color .12s ease, border-color .12s ease, opacity .12s ease;
  opacity: .9;
}

/* Join edges — continuous control */
.modchip + .modchip { border-left: 0; }

/* Rounded only on the ends, like a segmented control */
.modchip:first-child { border-radius: 6px 0 0 6px; }
.modchip:last-child  { border-radius: 0 6px 6px 0; }
.modchip:not(:first-child):not(:last-child) { border-radius: 0; }

/* Hover to match button */
.modchip:hover { background: #f6f6f6; }

/* Active/on state – strong blue */
.modchip.on {
  background: #daebf9;
  color: #000000;
  opacity: 1;
}

/* Dark mode parity with your buttons */
body.dark .modchip {
  background: var(--chip-col);
  border: 1px solid var(--border, #555);
  color: var(--fg, #ddd);
}
body.dark .modchip:hover { background: #3c3c3c; }
body.dark .modchip.on {
  background: #3c5060;
  color: #fff;
}

/* latched (toggled) – red hint */
.modchip.latched {
  background: #e53935;
  color: #fff;
}

body.dark .modchip.latched {
  background: #c62828;
  color: #fff;
}

.controls {
    display: flex;
    flex-wrap: nowrap;
    overflow: auto;
    gap: 8px 12px;
    align-items: center;
}

.controls .dim{
  font-size:0.9em;
  line-height:1;
  vertical-align:baseline;
  align-self:center;
}


.aesthetic-controls,
.functional-controls {
    display: flex;
    flex-wrap: wrap;
    gap: 8px 14px;
    min-width: 240px;
}

.control-divider{
  height:auto;
  align-self:stretch;
  width:1px;
  background:var(--border);
  margin:0 12px;
  flex:0 0 auto;
}


label {
    display: inline-flex;
    align-items: center;
    gap: 6px;
}

input[type='number'] {
    width: 70px;
    padding: 4px 6px;
}

input[type='checkbox'] {
    transform: translateY(1px);
}

button {
    padding: 6px 10px;
    border: 1px solid #d0d0d0;
    border-radius: 6px;
    background: white;
    cursor: pointer;
}

button:hover {
    background: #f6f6f6;
}

button.primary {
    border-color: #3b82f6;
}

/* Button colors for dark mode */
body.dark button {
    background: #2e2e2e;
    border: 1px solid var(--border);
    color: var(--fg);
}

body.dark button:hover {
    background: #3c3c3c;
}

/* Power-mode visual for any button */
button.power {
  background: #e53935;
  border-color: #b71c1c;
  color: #fff;
}

body.dark button.power {
  background: #c62828;
  border-color: #8e1515;
  color: #fff;
}

/* help button's gotta pop yo */

/* Make only the Help button a blue "primary" */
#helpBtn{
  background: #1e6fff;
  color: #fff;
  border: 1px solid #1e6fff;
  border-radius: 6px;
  padding: 6px 10px;
  font-weight: 600;
  box-shadow: 0 1px 2px rgba(0,0,0,.06), 0 2px 8px rgba(30,111,255,.15);
  transition: background .15s, border-color .15s, transform .02s;
}
#helpBtn:hover{ background:#185bdb; border-color:#185bdb; }
#helpBtn:active{ transform: translateY(1px); }
#helpBtn:focus-visible{
  outline: 2px solid #99b7ff;
  outline-offset: 2px;
}

/* optional: dark mode tweak so it still pops */
@media (prefers-color-scheme: dark){
  #helpBtn{
    background:#2a78ff;
    border-color:#2a78ff;
    box-shadow: 0 1px 2px rgba(0,0,0,.35), 0 2px 10px rgba(42,120,255,.25);
  }
  #helpBtn:hover{ background:#2265d6; border-color:#2265d6; }
  #helpBtn:focus-visible{ outline-color:#6ea4ff; }
}

canvas {
    cursor: inherit;
}

/* let JS set cursor directly on the canvas */
.main{
  display:grid;
  grid-template-columns:
      var(--w-left ,420px)    6px
      var(--w-mid  ,300px)    6px
      var(--w-right,1fr);

  gap:var(--gap);
  min-height:0;      /* keep children shrinkable vertically */

  /* let the grid itself shrink below its content */
  min-width:0;

  /* if (min-widths + splitters) > viewport → show a scrollbar  */
  overflow-x:auto;
}

/* Stack panels vertically when the viewport is ≥1.25× taller than wide
   (height/width ≥ 1.25  ↔  width/height ≤ 0.8) */
@media (max-aspect-ratio: 4/5) {
  .main {
    /* one column, five rows: canvas ▸ split ▸ legend ▸ split ▸ coder */
    grid-template-columns: 1fr;
    grid-template-rows:
      minmax(220px, 1fr)
      /* canvas */
      6px
      /* split L */
      minmax(180px, auto)
      /* legend */
      6px
      /* split R */
      minmax(220px, auto)
      /* coder */
    ;

    /* in tall mode we want vertical scroll, not horizontal */
    overflow-x: visible;
    overflow-y: auto;
  }

  /* splitters become horizontal bars */
  .splitter {
    width: 100%;
    height: 6px;
    cursor: row-resize;
  }
}

/* let every flex/grid item inside the .main shrink too */
.main > *{min-width:0;}

.splitter {
    width: 6px;
    cursor: col-resize;
    background: transparent;
}

.splitter:hover {
    background: #e5e7eb;
}

.canvas-wrap {
    position: relative;
    background: var(--canvas-bg);
    border: 1px solid #e5e5e5;
    border-radius: 8px;
    overflow: hidden;
}

canvas {
    width: 100%;
    height: 100%;
    display: block;
    image-rendering: pixelated;
    cursor: crosshair;
}

.legend,
.coderenderer {
    background: var(--panel-bg);
    border: 2px solid var(--border);
    border-radius: 8px;
    overflow: auto;
    display: flex;
    flex-direction: column;
}

.legend {
    padding: 10px;
}

.legend h2,
.coderenderer h2 {
    color: var(--fg-heading);
    font-size: 14px;
    margin: 0 0 8px 0;
    font-weight: 600;
}

.legend-list {
    display: flex;
    flex-direction: column;
    gap: 6px;
}

/* ── legend line: swatch │ alias │ ×, always one row ──────────────── */
.legend-item {
    display: flex;
    position: relative;
    /* switch grid → flex */
    align-items: center;
    gap: 8px;
    color: var(--fg-heading);
}

.legend-item.dragging {
    opacity: 0.5;
}

/* thin bar above the row */
.legend-item.dragover-above::before {
  content: '';
  position: absolute;
  top: -4px; left: 0; right: 0;
  height: 2px;
  background: var(--fg-muted);
}

/* thin bar below the row */
.legend-item.dragover-below::after {
  content: '';
  position: absolute;
  bottom: -4px; left: 0; right: 0;
  height: 2px;
  background: var(--fg-muted);
}

/* text column may shrink and wrap */
.legend-item> :nth-child(2) {
    flex: 1 1 0;
    /* take all free space, allow shrink */
    overflow-wrap: anywhere;
    /* wrap very long aliases */
}

.legend-item:hover, .legend-item.focus {
    background: #f7f7f7;
}

body.dark .legend-item:hover, body.dark .legend-item.focus {
    background: #2a2a2a;
}

.legend-footer {
  margin-top: auto;
  padding-top: 0.5em;
  font-size: 0.9em;
  color: var(--dim-text-color);
}

.swatch {
    width: 20px;
    height: 14px;
    border-radius: 3px;
    border: 1px solid #00000015;
    display: inline-grid;
    place-items: center;
    font-size: 11px;
    color: #000;
}

.del {
    color: #c32;
    background: transparent;
    border: none;
    font-size: 16px;
    line-height: 1;
    padding: 0 6px;
    cursor: pointer;
}

.del:hover {
    color: #a00;
}

.coderenderer {
    display: flex;
    flex-direction: column;
}

.coderenderer pre,
.coderenderer textarea {
    font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, 'DejaVu Sans Mono',
        monospace;
    font-size: 12px;
    line-height: 1.4;
    resize: none;
    border: none;
    border-top: 1px solid #efefef;
    margin: 0;
    padding: 10px;
    outline: none;
    flex: 1;
    white-space: pre;
    /* prevents wrapping  */
    overflow: auto;
    /* scroll bars both axes */
}

/* Code output textbox for dark mode */
body.dark .coderenderer textarea {
    background: #282828;
    color: var(--fg);
    border-top: 1px solid var(--border);
}

/* Toolbar background for consistency */
body.dark .coderenderer .toolbar {
    background: var(--panel-bg);
}

/* Adjust splitter color for dark mode */
body.dark .splitter:hover {
    background: #505050;
}

.coderenderer .toolbar {
    display: flex;
    flex-direction: column;
    gap: 8px;
    padding: 8px;
    flex-wrap: wrap;
}

/* render selector grid */
.render-select {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
    gap: 6px 12px;
    align-items: start;
    max-width: 100%;
}

.render-select fieldset {
    border: 1px solid #ddd;
    border-radius: 6px;
    padding: 6px 8px 4px;
    min-width: 0;
    /* let them shrink */
}

.render-select legend {
    font-size: 12px;
    font-weight: 600;
    padding: 0 4px;
}

.render-select label {
    display: inline-flex;
    gap: 4px;
    white-space: nowrap;
    margin: 2px 4px;
    cursor: pointer;
}

.render-select input {
    margin: 0;
}

/* --- compact chip radios --- */
/* container: rows that wrap; big groups force their own row */
.render-select.chip-radios {
  display: flex;
  flex-wrap: wrap;
  gap: 6px;
  /* space between groups */
}

/* group “oval” — tighter */
.render-select.chip-radios fieldset {
  margin: 0;
  padding: 4px 4px;
  /* tighter */
  border: 1px solid;
  --group-col: var(--chip-border, var(--border));
  border-color: var(--group-col);
  border-radius: 4px;
  /* oval */
  background: var(--panel-bg);
  display: inline-flex;
  align-items: center;
  flex-wrap: wrap;
  /* chips flow horizontally */
  gap: 0px 0px;
  /* chip spacing */
  width: max-content;
  /* don’t stretch */
  flex: 0 1 auto;
}


/* palette per group (single color across all sides)… */
.render-select.chip-radios fieldset[data-lang="r"]       { --group-col: var(--col-r); }
.render-select.chip-radios fieldset[data-lang="python"]  { --group-col: var(--col-python); }
.render-select.chip-radios fieldset[data-lang="latex"]   { --group-col: var(--col-latex); }
.render-select.chip-radios fieldset[data-lang="matlab"]  { --group-col: var(--col-matlab); }
.render-select.chip-radios fieldset[data-lang="wolfram"] { --group-col: var(--col-wolfram); }
.render-select.chip-radios fieldset[data-lang="julia"]   { --group-col: var(--col-julia); }
.render-select.chip-radios fieldset[data-lang="other"]   { --group-col: var(--col-other); }

/* wide groups (R / Python / Other) take a whole row */
.render-select.chip-radios fieldset[data-wide] {
  flex: 1 1 100%;
  width: 100%;
}

/* put wide rows first, small groups after them */
.render-select.chip-radios fieldset[data-wide] {
  order: 0;
}

.render-select.chip-radios fieldset:not([data-wide]) {
  order: 1;
}

/* legend: compact */
.render-select.chip-radios fieldset legend {
  display: inline-block;       /* take only as much height as needed */
  line-height: 1;              /* collapse sub/sup whitespace */
  vertical-align: middle;      /* keep aligned with border */
  padding: 0 4px;              /* small consistent padding */
  font-size: 12px;
  font-weight: 600;
  margin: 0 2px 0 2px;
  opacity: 0.9;
}


/* chips */
.render-select.chip-radios label {
  position: relative;
  display: inline-flex;
  align-items: center;
  padding: 2px 6px;
  /* tighter chip */
  border: 1px solid var(--fg-heading);
  border-radius: 4px;
  font-size: 12px;
  line-height: 1.2;
  white-space: nowrap;
  cursor: pointer;
  background: var(--chip-col);
}

.render-select.chip-radios label input[type="radio"] {
  position: absolute;
  inset: 0;
  opacity: 0;
  cursor: pointer;
}

.render-select.chip-radios fieldset legend sub,
.render-select.chip-radios fieldset legend sup {
  font-size: 70%;              /* smaller so it doesn’t force line height */
  line-height: 0;              /* don’t expand parent box */
}

/* modern browsers */
@supports selector(:has(*)) {
  .render-select.chip-radios fieldset label:has(input:checked) {
    border-color: var(--group-col);
    background-color: var(--group-col);
    color: var(--bg);
    box-shadow: none;
  }
  .render-select.chip-radios fieldset label:has(input:focus-visible) {
    outline: 2px solid var(--group-col);
    outline-offset: 2px;
  }
}

/* fallback when :has() isn’t supported — requires <input> + <span> in your markup */
@supports not selector(:has(*)) {
  .render-select.chip-radios fieldset label input[type="radio"]:checked + span {
    border-color: var(--group-col);
    background-color: var(--group-col);
    color: #fff;
    box-shadow: none;
  }
  .render-select.chip-radios fieldset label input[type="radio"]:focus-visible + span {
    outline: 2px solid var(--group-col);
    outline-offset: 2px;
  }
}

.canvas-wrap {
    position: relative;
    background: var(--canvas-bg);
    /* ← uses the new var */
    border: 1px solid var(--border);
    border-radius: 8px;
    overflow: hidden;
}

.legend,
.coderenderer {
    overflow: hidden;
    /* keep scrollbars if somebody shrinks too much */
    min-width: 160px;
    /* optional: don’t let them vanish entirely */
}

.dim {
    color: #666;
}

.hint {
    color: #444;
}

.flexsp {
    flex: 1;
}

/* ---------- tooltip ---------- */
.tooltip {
    position: fixed;
    z-index: 9999;
    max-width: 240px;

    padding: 6px 10px;
    border-radius: 4px;
    font: 12px/1.3 system-ui, sans-serif;

    color: #fff;
    background: #222;
    box-shadow: 0 2px 6px rgba(0, 0, 0, .25);

    pointer-events: none;
    /* mouse goes through it */
    opacity: 0;
    transition: opacity .15s;
}

/* error message */
.toast {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  
  padding: 20px 30px;
  background: rgba(211, 47, 47, 0.75);
  color: #fff;
  font: bold 24px/1.4 system-ui, sans-serif;
  border-radius: 8px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
  opacity: 0;
  transition: opacity 0.3s;
  z-index: 9999;
  pointer-events: none;
}

/* switch for labels */
.label-switch{
  display:inline-flex;
  border:1px solid var(--border);
  border-radius:2px;
  overflow:hidden;
  font-size:13px;
  border-color:var(--border);
}
.label-switch button{
  all:unset;
  padding:4px 12px;
  cursor:pointer;
  user-select:none;
}
.label-switch button.active{
  background:var(--accent-col);
}

/* help information */

.hidden { display: none !important; }

.modal-open { overflow: hidden; }

.modal {
  position: fixed; 
  inset: 0; 
  z-index: 9999;
  pointer-events: none;
}

.modal__backdrop {
  position: absolute; inset: 0;
  background: rgba(0,0,0,.35);
  backdrop-filter: blur(2px);
  pointer-events: auto;
}

.modal__card {
  position: absolute; inset: 0;
  margin: auto; max-width: 860px; max-height: 80vh;
  width: min(92vw, 860px); height: auto;
  background: var(--panel-bg, #fff);
  color: var(--fg, #111);
  border-radius: 14px;
  box-shadow: 0 10px 40px rgba(0,0,0,.25);
  padding: 18px 20px 16px 20px;
  overflow: hidden;
  pointer-events: auto;
}

@media (prefers-color-scheme: dark) {
  .modal__card {
    background: var(--panel-bg, #1f1f1f);
    color: var(--fg, #f3f3f3);
    box-shadow: 0 10px 40px rgba(0,0,0,.5);
  }
}

.modal__title {
  margin: 0 36px 8px 0;
  font: 600 20px system-ui, -apple-system, Segoe UI, Roboto, sans-serif;
}

.modal__close {
  position: absolute; top: 8px; right: 8px;
  width: 32px; height: 32px; border: 0; border-radius: 8px;
  background: transparent; color: inherit; font-size: 22px; line-height: 1;
  cursor: pointer;
}
.modal__close:hover { background: rgba(0,0,0,.06); }
@media (prefers-color-scheme: dark) {
  .modal__close:hover { background: rgba(255,255,255,.06); }
}

.modal__content {
  overflow: auto; max-height: calc(80vh - 56px);
  padding-right: 4px;
}

.controls-grid {
  display: grid; gap: 10px 16px;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  align-items: start;
}

.section {
  border: 1px solid rgba(0,0,0,.08);
  border-radius: 10px;
  padding: 12px 12px 8px;
}
@media (prefers-color-scheme: dark) {
  .section { border-color: rgba(255,255,255,.12); }
}

.section h3 {
  margin: 0 0 8px; font: 600 14px system-ui;
  opacity: .9; letter-spacing: .2px; text-transform: uppercase;
}

/* Corner utilities (keep) */
.help-mods .modchip--roundL {
  border-radius: 6px 0 0 6px;
}

.help-mods .modchip--roundR {
  border-radius: 0 6px 6px 0;
}

.help-mods .modchip--square {
  border-radius: 0;
}

/* Title row (add flex-wrap to prevent squish) */
.help-mods .section-title {
  display: flex;
  align-items: center;
  gap: .5rem;
  margin: 0 0 .25rem 0;
  flex-wrap: wrap;
  /* <-- allow wrap */
}

/* Body layout (keep) */
.help-mods .modbar {
  margin-left: 0;
}

.help-mods .blurb {
  margin: .2rem 0;
  line-height: 1.35;
}

.help-mods .line {
  display: grid;
  grid-template-columns: auto 1fr;
  gap: .5rem .6rem;
  align-items: center;
  margin: .2rem 0;
}

.help-mods .line .label {
  display: inline-flex;
  align-items: center;
}

.help-mods .demo {
  display: inline-flex;
  align-items: center;
  gap: .35rem;
  margin-left: .4rem;
}

.help-mods .arrow {
  opacity: .6;
}

.help-mods .aside {
  opacity: .7;
  margin-left: .35rem;
  font-size: 12px;
}

.kbd {
  display: inline-block; min-width: 1.75em;
  padding: 2px 6px; margin: 0 2px;
  border-radius: 6px; border: 1px solid rgba(0,0,0,.2);
  background: rgba(255,255,255,.5);
  color: inherit; font: 500 12px ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;
  text-align: center;
}
@media (prefers-color-scheme: dark) {
  .kbd { background: rgba(255,255,255,.08); border-color: rgba(255,255,255,.2); }
}

.row { display: flex; gap: 8px; align-items: baseline; margin: 6px 0; }
.row b { font-weight: 600; }
.row .desc { opacity: .85; }

.chip {
  display: inline-flex; align-items: center;
  padding: 4px 10px; border-radius: 6px;
  border: 1px solid rgba(0,0,0,.18);
  background: rgba(255,255,255,.55);
  font: 600 13px system-ui, -apple-system, Segoe UI, Roboto, sans-serif;
  line-height: 1; white-space: nowrap; color: inherit;
}
@media (prefers-color-scheme: dark) {
  .chip { border-color: rgba(255,255,255,.22); background: rgba(255,255,255,.10); }
}
